{"version":3,"file":"static/js/483.404cbafd.chunk.js","mappings":"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","sources":["components/Cast.jsx","components/Reviews.jsx","webpack://react-homework-template/./src/styles/movieDetails.module.css?401c","components/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getCast } from '../services/movies-api';\n\nexport default function Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        getCast(movieId).then(data => {\n            setCast(data.cast);\n        })\n    }, [movieId]);\n\n    return (\n        <div>\n            {cast && (\n                <ul>{cast.map(({ id, character, original_name, profile_path }) => (\n                < li key={id} >\n                    <div>{profile_path}</div>\n                    <p>{original_name}</p>\n                    <p>{character}</p>\n                </li>))}\n            </ul>)}\n        </div>);\n}","import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getReviews } from '../services/movies-api';\n\nexport default function Reviews() {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        getReviews(movieId).then(data => {\n            setReviews(data.results);\n        });\n    }, [movieId]);\n\n    return (\n        <div>\n        {reviews && (\n            <ul>\n                {reviews.map(review => (\n                    < li key={review.id} >\n                        <p>{review.results}</p>\n                    </li>\n                ))}\n                </ul>\n            )}\n    </div>\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"general\":\"movieDetails_general__Lyo7b\",\"details\":\"movieDetails_details__Cb60z\",\"additional\":\"movieDetails_additional__PUbUy\"};","import { useEffect, useState } from 'react';\nimport { useNavigate, useParams, Outlet, Route, Routes } from 'react-router-dom';\nimport { getMovieById } from '../services/movies-api';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\nimport css from '../styles/movieDetails.module.css';\n\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\nconst navigate = useNavigate();\n\tconst goBack = () => {\n\t\tnavigate(-1);\n\t}\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(data => {\n        setMovie(data);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        // Handle error\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  console.log(movie);\n\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          <button onClick={goBack}>Go back</button>\n          {movie ? (\n              <div className={css.movie}>\n                <section className={css.general}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\n                alt=\"movie poster\"\n                />\n                <section className={css.details}>\n                <h3 className={css.title}>{movie.title}</h3>\n                 <p>Popularity: {movie.popularity}</p>\n                <h4>Overview</h4>\n                <p>{movie.overview}</p>\n                <h4>Genres {''}</h4>\n                 <ul>\n                  {movie.genres.length > 0 ? (\n                 movie.genres.map(({ id, name }, index) => (\n                  <li key={id}>{(index ? '' : '') + name}</li>\n                 ))\n                  ) : (\n                      <p>Other</p>\n                )}   \n                  </ul>\n                  </section>\n                  </section>\n                <section className={css.additional}>\n                  <h4>Additional Details</h4>\n                <Routes>\n                <Route path=\"/cast\" element={<Cast />} />\n                <Route path=\"/reviews\" element={<Reviews />} />\n              </Routes>\n                  <Outlet />\n                  </section>\n            </div>\n          ) : (\n            <div>No movie found.</div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\nconst KEY = \"88a585cd1ff82046a0cbf3e35de5ad9f\";\nconst URL = \"https://api.themoviedb.org/3/\";\n\nexport const getTrendingMovies = async () => {\n  const url = `${URL}trending/movie/day?api_key=${KEY}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getSearchMovie = async movie => {\n  const url = `${URL}search/movie?api_key=${KEY}&query=${movie}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieById = async movieId => {\n  const url = `${URL}movie/${movieId}?api_key=${KEY}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getCast = async movieId => {\n  const url = `${URL}movie/${movieId}/credits?api_key=${KEY}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getReviews = async movieId => {\n  const url = `${URL}movie/${movieId}/reviews?api_key=${KEY}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return error;\n  }\n};\n\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","getCast","then","data","map","id","character","original_name","profile_path","Reviews","reviews","setReviews","getReviews","results","review","MovieDetails","movie","setMovie","isLoading","setIsLoading","navigate","useNavigate","getMovieById","catch","error","console","log","onClick","className","css","src","backdrop_path","alt","title","popularity","overview","genres","length","index","name","path","element","KEY","URL","getTrendingMovies","url","axios","resp","getSearchMovie"],"sourceRoot":""}