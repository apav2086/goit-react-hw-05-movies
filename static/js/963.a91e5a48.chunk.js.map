{"version":3,"file":"static/js/963.a91e5a48.chunk.js","mappings":"4OAIe,SAASA,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAQN,GAASO,MAAK,SAAAC,GAClBJ,EAAQI,EAAKL,KAChB,GACJ,GAAE,CAACH,KAGA,yBACKG,IACG,wBAAKA,EAAKM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,cAAeC,EAAjC,EAAiCA,aAAjC,OACd,2BACI,yBAAMA,KACN,uBAAID,KACJ,uBAAID,MAHED,EADI,OAQ7B,CCrBc,SAASI,IACpB,IAAQd,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOa,EAAP,KAAgBC,EAAhB,KAQA,OANAX,EAAAA,EAAAA,YAAU,YACNY,EAAAA,EAAAA,IAAWjB,GAASO,MAAK,SAAAC,GACrBQ,EAAWR,EAAKU,QACnB,GACJ,GAAE,CAAClB,KAGA,yBACCe,IACG,wBACKA,EAAQN,KAAI,SAAAU,GAAM,OACf,yBACI,uBAAIA,EAAOD,WADLC,EAAOT,GADF,OASlC,CCpBc,SAASU,IAEtB,OAAelB,EAAAA,EAAAA,WAAS,kBAAMM,EAAKa,QAAO,SAAAC,GAAK,OAAIA,CAAJ,GAAvB,IAAjBd,GAAP,eAEA,OACE,4BACE,SAAC,KAAD,CAAMe,GAAG,IAAT,kBACCf,IACC,4BACE,wBAAKA,EAAKgB,SACV,gBAAKC,IAAKjB,EAAKkB,YAAaC,IAAI,kBAChC,yCAAiBnB,EAAKoB,UACtB,uCAAepB,EAAKqB,aACpB,qCAAarB,EAAKsB,WAClB,oDACA,UAAC,KAAD,YACI,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACjC,EAAD,OAC5B,SAAC,KAAD,CAAOgC,KAAK,OAAOC,SAAS,SAAClB,EAAD,UAEhC,SAAC,KAAD,SAKT,C,uKC9BKmB,EAAM,mCACNC,EAAM,gCAECC,EAAiB,mCAAG,6FACzBC,EADyB,UAChBF,EADgB,sCACiBD,GADjB,kBAGVI,EAAAA,EAAAA,IAAUD,GAHA,cAGvBE,EAHuB,yBAItBA,EAAK9B,KAAKU,SAJY,wHAAH,qDAUjBqB,EAAc,mCAAG,WAAMjB,GAAN,gFACtBc,EADsB,UACbF,EADa,gCACcD,EADd,kBAC2BX,GAD3B,kBAGPe,EAAAA,EAAAA,IAAUD,GAHH,cAGpBE,EAHoB,yBAInBA,EAAK9B,KAAKU,SAJS,wHAAH,sDAoBdZ,EAAO,mCAAG,WAAMN,GAAN,gFACfoC,EADe,UACNF,EADM,iBACMlC,EADN,4BACiCiC,GADjC,kBAGAI,EAAAA,EAAAA,IAAUD,GAHV,cAGbE,EAHa,yBAIZA,EAAK9B,MAJO,wHAAH,sDAUPS,EAAU,mCAAG,WAAMjB,GAAN,gFAClBoC,EADkB,UACTF,EADS,iBACGlC,EADH,4BAC8BiC,GAD9B,kBAGHI,EAAAA,EAAAA,IAAUD,GAHP,cAGhBE,EAHgB,yBAIfA,EAAK9B,MAJU,wHAAH,qD","sources":["components/Cast.jsx","components/Reviews.jsx","components/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getCast } from '../services/movies-api';\n\nexport default function Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        getCast(movieId).then(data => {\n            setCast(data.cast);\n        })\n    }, [movieId]);\n\n    return (\n        <div>\n            {cast && (\n                <ul>{cast.map(({ id, character, original_name, profile_path }) => (\n                < li key={id} >\n                    <div>{profile_path}</div>\n                    <p>{original_name}</p>\n                    <p>{character}</p>\n                </li>))}\n            </ul>)}\n        </div>);\n}","import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getReviews } from '../services/movies-api';\n\nexport default function Reviews() {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        getReviews(movieId).then(data => {\n            setReviews(data.results);\n        });\n    }, [movieId]);\n\n    return (\n        <div>\n        {reviews && (\n            <ul>\n                {reviews.map(review => (\n                    < li key={review.id} >\n                        <p>{review.results}</p>\n                    </li>\n                ))}\n                </ul>\n            )}\n    </div>\n    );\n}","import { useState } from 'react';\nimport { Outlet} from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport { Route, Routes } from 'react-router-dom';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\n\nexport default function MovieDetails() {\n \n  const [data] = useState(() => data.filter(movie => movie));\n\n  return (\n    <div>\n      <Link to=\"/\">Back</Link>\n      {data && (\n        <div>\n          <h3>{data.title}</h3>\n          <img src={data.poster_path} alt=\"movie poster\" />\n          <h4>User Score: {data.score}</h4>\n          <h5>Overview: {data.overview}</h5>\n          <h5>Genres: {data.genres}</h5>\n          <h5>Additional information</h5>\n          <Routes>\n              <Route path=\"cast\" element={<Cast />} />\n              <Route path=\"cast\" element={<Reviews />} /> \n            </Routes>\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n}","import axios from 'axios';\nconst KEY = \"88a585cd1ff82046a0cbf3e35de5ad9f\";\nconst URL = \"https://api.themoviedb.org/3/\";\n\nexport const getTrendingMovies = async () => {\n  const url = `${URL}trending/movie/day?api_key=${KEY}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getSearchMovie = async movie => {\n  const url = `${URL}search/movie?api_key=${KEY}&query=${movie}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieById = async movieId => {\n  const url = `${URL}movie/${movieId}?api_key=${KEY}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getCast = async movieId => {\n  const url = `${URL}movie/${movieId}/credits?api_key=${KEY}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getReviews = async movieId => {\n  const url = `${URL}movie/${movieId}/reviews?api_key=${KEY}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return error;\n  }\n};\n\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","getCast","then","data","map","id","character","original_name","profile_path","Reviews","reviews","setReviews","getReviews","results","review","MovieDetails","filter","movie","to","title","src","poster_path","alt","score","overview","genres","path","element","KEY","URL","getTrendingMovies","url","axios","resp","getSearchMovie"],"sourceRoot":""}